apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    acme.cert-manager.io/http01-edit-in-place: 'true'
    cert-manager.io/cluster-issuer: letsencrypt-production
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/server-snippet: |
      proxy_bind off;
  name: minio-console-kontur-io-ng
  namespace: minio-operator
spec:
  ingressClassName: ingress-nginx
  rules:
    - host: minio.kontur.io
      http:
        paths:
          - backend:
              service:
                name: console
                port:
                  name: http
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - minio.kontur.io
      secretName: minio-kontur-io-tls

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    acme.cert-manager.io/http01-edit-in-place: 'true'
    cert-manager.io/cluster-issuer: letsencrypt-production
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/auth-type: "basic"
    nginx.ingress.kubernetes.io/auth-secret: "basic-auth"
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    nginx.ingress.kubernetes.io/server-snippet: |
      proxy_bind off;
      grpc_read_timeout 120s;
      grpc_send_timeout 120s;
      client_body_timeout 120s;
      client_max_body_size 10000m;
  name: prod-s3-kontur-io-ng
  namespace: prod-minio
spec:
  ingressClassName: ingress-nginx
  rules:
    - host: prod-s3.kontur.io
      http:
        paths:
          - backend:
              service:
                name: prod-minio-tenant-console
                port:
                  name: https-console
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - prod-s3.kontur.io
      secretName: prod-s3-kontur-io-tls
